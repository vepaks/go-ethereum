name: Deploy Devnet

on:
  pull_request:
    types: [closed]
    branches:
      - master
      - develop

jobs:
  build-and-push-devnet:
    if: github.event.pull_request.merged == true && contains(github.event.pull_request.labels.*.name, 'CI:Deploy')
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: List files in ci/hardhat before build
        run: ls -l ci/hardhat/

      - name: Set environment based on target branch
        id: set-env
        run: |
          if [[ "${{ github.event.pull_request.base.ref }}" == "master" ]]; then
            echo "ENVIRONMENT=prod" >> $GITHUB_ENV
          elif [[ "${{ github.event.pull_request.base.ref }}" == "develop" ]]; then
            echo "ENVIRONMENT=stage" >> $GITHUB_ENV
          else
            echo "ENVIRONMENT=${{ github.event.pull_request.base.ref }}" >> $GITHUB_ENV
          fi

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for devnet image
        id: meta-devnet
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository }}_devnet
          tags: |
            type=raw,value=${{ github.event.pull_request.base.ref }}_latest
            type=sha,prefix=${{ github.event.pull_request.base.ref }}_,format=short

      - name: Build and push devnet Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./ci/hardhat/Dockerfile.devnet
          push: true
          no-cache: true
          tags: ${{ steps.meta-devnet.outputs.tags }}
          labels: |
            org.opencontainers.image.title=go-ethereum_devnet
            org.opencontainers.image.description=go-ethereum devnet image with Hardhat integration | Branch: ${{ github.event.pull_request.base.ref }} | Environment: ${{ env.ENVIRONMENT }} | Build: ${{ github.run_number }} | Commit: ${{ github.sha }}
            org.opencontainers.image.version=${{ github.sha }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
            org.opencontainers.image.url=${{ github.server_url }}/${{ github.repository }}
            org.opencontainers.image.documentation=${{ github.server_url }}/${{ github.repository }}/blob/${{ github.sha }}/README.md
            org.opencontainers.image.authors=${{ github.actor }}
          build-args: |
            COMMIT=${{ github.sha }}
            VERSION=${{ github.sha }}
            BUILDNUM=${{ github.run_number }}
            BRANCH=${{ github.event.pull_request.base.ref }}
            ENVIRONMENT=${{ env.ENVIRONMENT }}

  test-devnet:
    needs: build-and-push-devnet
    if: github.event.pull_request.merged == true && contains(github.event.pull_request.labels.*.name, 'CI:Deploy')
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Start devnet container
        run: |
          docker run -d \
            --name devnet \
            -p 8545:8545 \
            -p 8546:8546 \
            ghcr.io/${{ github.repository }}_devnet:${{ github.event.pull_request.base.ref }}_latest

      - name: Wait for devnet to be ready
        run: |
          timeout=60
          while [ $timeout -gt 0 ]; do
            if curl -s http://localhost:8545 -X POST -H "Content-Type: application/json" --data '{"jsonrpc":"2.0","method":"eth_blockNumber","params":[],"id":1}' > /dev/null; then
              echo "Devnet is ready"
              exit 0
            fi
            sleep 1
            timeout=$((timeout-1))
          done
          echo "Devnet failed to start"
          exit 1

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: |
          cd hardhat
          npm install

      - name: Create .env file
        run: |
          cat > hardhat/.env << EOL
          # Network Configuration
          HARDHAT_NETWORK=localhost
          HARDHAT_NETWORK_URL=http://localhost:8545

          # Test Account Configuration
          TEST_MNEMONIC=${{ secrets.TEST_MNEMONIC }}
          TEST_PRIVATE_KEY=${{ secrets.TEST_PRIVATE_KEY }}
          TEST_ADDRESS=${{ secrets.TEST_ADDRESS }}

          # Contract Configuration
          CONTRACT_NAME=${{ secrets.CONTRACT_NAME }}
          CONTRACT_VERSION=${{ secrets.CONTRACT_VERSION }}
          EOL

      - name: Run Hardhat tests
        run: |
          cd hardhat
          npx hardhat test --network localhost
        env:
          HARDHAT_NETWORK: localhost
          HARDHAT_NETWORK_URL: http://localhost:8545
          TEST_MNEMONIC: ${{ secrets.TEST_MNEMONIC }}

      - name: Show devnet container logs on failure
        if: failure()
        run: docker logs devnet || true

      - name: Cleanup
        if: always()
        run: |
          docker stop devnet || true
          docker rm devnet || true 